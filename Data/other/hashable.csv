Category,Count,,Sub-Category,Count,,Sub-Sub-Category,Count-subcatagory,,Sub-Sub-Sub-Category,Count-Sub-Sub-Sub-Category,,Sub-Sub-Sub-sub-Category,Solution,Solution Main Category,Solution Category,Link to commit
Inefficient coding for target micro-architecure,58,"31,18%",Memory/Data locality,36,"19,35%",Intra-thread data locality,32,"17,20%",cache locality,13,"6,99%",Inefficient data-structure (Use of non-contiguous memory data-structure),Using std:array instead of std:Set,Data structure optimization for data locality,,https://github.com/CGAL/cgal/commit/28a9cb150ae9b11f9bb37d972be990d87b05cbcf
Inefficient coding for target micro-architecure,,,Memory/Data locality,,,Intra-thread data locality,,,cache locality,,,Inefficient data-structure (Use of non-contiguous memory data-structure),,Data structure optimization for data locality,,https://github.com/CGAL/cgal/commit/b0379f54bdff8236dee3a429b235167700ba23c0
Inefficient coding for target micro-architecure,,,Memory/Data locality,,,Intra-thread data locality,,,cache locality,,,Inefficient data-structure (Use of non-contiguous memory data-structure),regular memory access,Data structure optimization for data locality,,https://github.com/mlpack/mlpack/commit/723dea88435686b72359793ace767d0b409635af
Inefficient coding for target micro-architecure,,,Memory/Data locality,,,Intra-thread data locality,,,cache locality,,,Inefficient data-structure (Use of non-contiguous memory data-structure),Using std:vector instead of std:List,Data structure optimization for data locality,,https://github.com/CGAL/cgal/commit/8855eb54c305ffeaec32cb6bc49bfb0a2e465cc2
Inefficient coding for target micro-architecure,,,Memory/Data locality,,,Intra-thread data locality,,,cache locality,,,avoid memory referenced,,Avoid memory dereference by storing in register,,https://github.com/lammps/lammps/commit/6c5edf6c709ef1fc9c914ec8049fa41a7fb3a49a
Inefficient coding for target micro-architecure,,,Memory/Data locality,,,Intra-thread data locality,,,cache locality,,,local memory underutilization,Re-enable memory prefetching for AMD,Memory prefetching,,https://github.com/gromacs/gromacs/commit/001b6e76700a2228a60d28223f7fb37ed5b7d3be
Inefficient coding for target micro-architecure,,,Memory/Data locality,,,Intra-thread data locality,,,cache locality,,,cache locality,,Reorder memory reference to improve temporal locality,,https://github.com/xianyi/OpenBLAS/commit/45fdf951b64aa9145996727ecda901f00a2eda3c
Inefficient coding for target micro-architecure,,,Memory/Data locality,,,Intra-thread data locality,,,cache locality,,,,,Reorder memory reference to improve spatial locality,,https://github.com/cp2k/cp2k/commit/7b34ac6ca470a6a5a2d71d2027d577b08f0dac92
Inefficient coding for target micro-architecure,,,Memory/Data locality,,,Intra-thread data locality,,,cache locality,,,poor cache utilization,,Reorder memory reference to improve temporal locality,,https://github.com/FFTW/fftw3/commit/d0b93533d99e69f85e2aaf759989f652311206ac
Inefficient coding for target micro-architecure,,,Memory/Data locality,,,Intra-thread data locality,,,cache locality,,,,,Loop fission,,https://github.com/gromacs/gromacs/commit/95cc614f64ac211696da00204923e387a735a490
Inefficient coding for target micro-architecure,,,Memory/Data locality,,,Intra-thread data locality,,,cache locality,,,Inefficient register use,Explict use of static to use the register,Avoid memory dereference by storing in register,,https://github.com/FFTW/fftw3/commit/6076339a342b12b0d0cfd9f6d967bfa9fbf6b1b2
Inefficient coding for target micro-architecure,,,Memory/Data locality,,,Intra-thread data locality,,,cache locality,,,,,Improve register/cache utilization via blocking,register blocking,https://github.com/xianyi/OpenBLAS/commit/1b0b4349a11f8de40037d9bddf9ddb9b094cdd2c
Inefficient coding for target micro-architecure,,,Memory/Data locality,,,Intra-thread data locality,,,cache locality,,,cache locality,,Improve register/cache utilization via blocking,,https://github.com/xianyi/OpenBLAS/commit/a87736346fd3988618c0d8895827566fce5a5487
Inefficient coding for target micro-architecure,,,Memory/Data locality,,,Intra-thread data locality,,,Memory alignment,1,,memory miss-allignment for vector operation,,Data structure optimization for data locality,memory aligned data-structure,https://github.com/openmm/openmm/commit/b1be68d873e649ab07ae6c65f017163066373123
Inefficient coding for target micro-architecure,,,Memory/Data locality,,,Intra-thread data locality,,,GPU Register spilling,3,,Compiler failure,Explicitly use __constant__ to store in GPU constant memory,Explicit use of constant memory,,https://github.com/lattice/quda/commit/b7857af47ff2e8e8162a250a4adefba55680b1c9
Inefficient coding for target micro-architecure,,,Memory/Data locality,,,Intra-thread data locality,,,GPU Register spilling,,,,Explicitly use constant index to avoid register spill by the compiler,Enable compile time evaluation,,https://github.com/gromacs/gromacs/commit/589e11b78d73fa5a7b34a71bb58f3c304984dc34
Inefficient coding for target micro-architecure,,,Memory/Data locality,,,Intra-thread data locality,,,GPU Register spilling,,,unnecessary register use,Efficient implementation to avoid unncessary register usage,Use of data types that reduces computation and memory overhead,,https://github.com/gromacs/gromacs/commit/85c36b9a1ca9c62702da2a0d6f97853c9f1d889c
Inefficient coding for target micro-architecure,,,Memory/Data locality,,,Intra-thread data locality,,,Host-GPU device data communication,2,,unpinned host memory,Send data through pinned host memory (cuMemHostAlloc),Memory pinning,,https://github.com/openmm/openmm/commit/926e7b9ac11a8614f310b59a2d786788771ccb5b
Inefficient coding for target micro-architecure,,,Memory/Data locality,,,Intra-thread data locality,,,Host-GPU device data communication,,,unnecessary synchronous data copy,asynchronous data copy via kernel initialization,Async data transfer between host and device,,https://github.com/ginkgo-project/ginkgo/commit/154aafbd57e93e4ede30b1566d2bf03e7c1b096e
Inefficient coding for target micro-architecure,,,Memory/Data locality,,,Intra-thread data locality,,,GPU memory,13,"6,99%",Unnecessarily using global constant memory,,Reduce GPU-global memory access,Use Texture memory instead of global constant memory,https://github.com/arrayfire/arrayfire/commit/d8d8c439c8d0a43c0f92b11fd06133be80754ab8
Inefficient coding for target micro-architecure,,,Memory/Data locality,,,Intra-thread data locality,,,GPU memory,,,,,Reduce GPU-global memory access,,https://github.com/arrayfire/arrayfire/commit/113cb18160a31d8ee04d11969bc57ff1628bda50
Inefficient coding for target micro-architecure,,,Memory/Data locality,,,Intra-thread data locality,,,GPU memory,,,Un-coalesced memory access,Thread-aware data access,Thread-aware data access,,https://github.com/arrayfire/arrayfire/commit/dd97ce5e041d22cdcb6bf7a66baca51c2491c767
Inefficient coding for target micro-architecure,,,Memory/Data locality,,,Intra-thread data locality,,,GPU memory,,,inefficient use of Texture memory,,Avoid using GPU texture memory,,https://github.com/gromacs/gromacs/commit/3e52c82b8ffa11bfa318396eb8e86cbd0f9b7446
Inefficient coding for target micro-architecure,,,Memory/Data locality,,,Intra-thread data locality,,,GPU memory,,,Use of high latency global memory,replaced with low latency shared memory,Reduce GPU-global memory access,,https://github.com/gromacs/gromacs/commit/8aa14d11ff775055794360a655fe800deea298a8
Inefficient coding for target micro-architecure,,,Memory/Data locality,,,Intra-thread data locality,,,GPU memory,,,small shared memory,Reconfigure larger shared memory in VOLTA to increase L2 cache hit,Configure HW caches size,,https://github.com/lattice/quda/commit/0dd4f75396999b649c759946fe0b53e6cd12aae0
Inefficient coding for target micro-architecure,,,Memory/Data locality,,,Intra-thread data locality,,,GPU memory,,,unnecessary memory access,,Reorder memory reference to improve spatial locality,,https://github.com/arrayfire/arrayfire/commit/46c66b5658beb84f4897581b16ae235f173ad97c
Inefficient coding for target micro-architecure,,,Memory/Data locality,,,Intra-thread data locality,,,GPU memory,,,Missed opportunity to use read-only data cache,caching frequently used read-only data in read-only data-cache improves performance,Reduce GPU-global memory access,Explicitly using __LDG(),https://github.com/lattice/quda/commit/aa7049a587c6aec0d4979d1af5fb96e2c65d83c7
Inefficient coding for target micro-architecure,,,Memory/Data locality,,,Intra-thread data locality,,,GPU memory,,,,put frequently used read-only data in read-only constant memory,Reduce GPU-global memory access,,https://github.com/arrayfire/arrayfire/commit/f62199b77718b4f2e2748921b78055adb0405d9e
Inefficient coding for target micro-architecure,,,Memory/Data locality,,,Intra-thread data locality,,,GPU memory,,,missed compiler optimization,,Function inlining,,https://github.com/ginkgo-project/ginkgo/commit/827e5b2e173ccd07b734767022a1ae8a5ec0e454
Inefficient coding for target micro-architecure,,,Memory/Data locality,,,Intra-thread data locality,,,GPU memory,,,Instruction cache miss,Loop unrolling,Loop unrolling,,https://github.com/gromacs/gromacs/commit/842c0f3e3d10c8b61529895e1c8a758d5aa894ab
Inefficient coding for target micro-architecure,,,Memory/Data locality,,,Intra-thread data locality,,,GPU memory,,,poor temporal reuse,,Reorder memory reference to improve temporal locality,,https://github.com/gromacs/gromacs/commit/cb313c7e66b36b25e4c54db9934cad613418ecd1
Inefficient coding for target micro-architecure,,,Memory/Data locality,,,Intra-thread data locality,,,GPU memory,,,bank conflict in reduction,,Data structure optimization for data locality,,https://github.com/lattice/quda/commit/78888086307d31e206a06023a6ee0cb055f8e0cf
Inefficient coding for target micro-architecure,,,Memory/Data locality,,,Inter-thread Data locality,4,"2,15%",cache locality,4,,false sharing,thread aware strided data access to avoid cache-line sharing,Thread-aware data access,thread-aware data access,https://github.com/xianyi/OpenBLAS/commit/831858b88351e350c9f6ad5c2d7f0c70d4cce18c
Inefficient coding for target micro-architecure,,,Memory/Data locality,,,Inter-thread Data locality,,,cache locality,,,,,Thread-aware data access,,https://github.com/xianyi/OpenBLAS/commit/9fe3049de67495e1ca916141624c985a80f3d6cb
Inefficient coding for target micro-architecure,,,Memory/Data locality,,,Inter-thread Data locality,,,cache locality,,,,Change memory layout by adding pad to avoid false sharing,Data structure optimization for data locality,avoid false sharing by padding,https://github.com/kokkos/kokkos/commit/75fd8bc29f91d876e62cc3234cfaf33da4bb34f2
Inefficient coding for target micro-architecure,,,Memory/Data locality,,,Inter-thread Data locality,,,cache locality,,,poor cache utilization due to thread scheduling,Thread-group tiling,thread scheduling to improve locality,CTA swizzling,https://github.com/lattice/quda/commit/60968d72cb4f6d1a62d8f5d959bf04a56d6c00a9
Inefficient coding for target micro-architecure,,,Micro-architectural inefficiency,22,"11,83%",Missed compiler loop optimization,9,"4,84%",missed unrolling,5,"2,69%",,loop unrolling,Loop unrolling,,https://github.com/xianyi/OpenBLAS/commit/b06880c2cdfc8a0bd5caa2c1d62f7bba3611b932
Inefficient coding for target micro-architecure,,,Micro-architectural inefficiency,,,Missed compiler loop optimization,,,missed unrolling,,,,loop unrolling,Loop unrolling,,https://github.com/arrayfire/arrayfire/commit/7f3fe1ebaae10079e7e5b62913745d7ae022b4b2
Inefficient coding for target micro-architecure,,,Micro-architectural inefficiency,,,Missed compiler loop optimization,,,missed unrolling,,,,loop unrolling,Loop unrolling,,https://github.com/lattice/quda/commit/5f028db11bc5111032dc9ab107dc36b681728f60
Inefficient coding for target micro-architecure,,,Micro-architectural inefficiency,,,Missed compiler loop optimization,,,missed unrolling,,,,loop unrolling,Loop unrolling,,https://github.com/lattice/quda/commit/c3d7cba1d197a8c153ac639f41f98a4c76a0fd89
Inefficient coding for target micro-architecure,,,Micro-architectural inefficiency,,,Missed compiler loop optimization,,,missed unrolling,,,,loop unrolling,Loop unrolling,,https://github.com/arrayfire/arrayfire/commit/928e77aed1db65680f9b6bfbfa4d7791bdb32511
Inefficient coding for target micro-architecure,,,Micro-architectural inefficiency,,,Missed compiler loop optimization,,,unnecessary branch,1,,,,Enable compile time evaluation,,https://github.com/arrayfire/arrayfire/commit/928e77aed1db65680f9b6bfbfa4d7791bdb32511
Inefficient coding for target micro-architecure,,,Micro-architectural inefficiency,,,Missed compiler loop optimization,,,missed function inlining,3,,,,Function inlining,,https://github.com/libMesh/libmesh/commit/e0374afe79a9ac43d845a29013ff9e236c581c9e
Inefficient coding for target micro-architecure,,,Micro-architectural inefficiency,,,Missed compiler loop optimization,,,missed function inlining,,,,,Function inlining,,https://github.com/gromacs/gromacs/commit/99bf01ea5d1c6ada6daeebb054987fdd8c026f99
Inefficient coding for target micro-architecure,,,Micro-architectural inefficiency,,,Missed compiler loop optimization,,,missed function inlining,,,,,Function inlining,,https://github.com/libMesh/libmesh/commit/090ec4de7e2fb25104cececac87d533c11fc13c7
Inefficient coding for target micro-architecure,,,Micro-architectural inefficiency,,,Loop carried dependence,1,,missed function inlining,,,,Eliminate loop carried dependence,Loop fission,,https://github.com/lattice/quda/commit/c3d7cba1d197a8c153ac639f41f98a4c76a0fd89
Inefficient coding for target micro-architecure,,,Micro-architectural inefficiency,,,suboptimal computational kernel size for the target,6,"3,23%",Inefficient SIMD width for Power 10,1,,,,Tuning kernel size,matrix dimension tuning,https://github.com/xianyi/OpenBLAS/commit/7d46e31de1a206ea55ae31e7a0a1ae4b704458e0
Inefficient coding for target micro-architecure,,,Micro-architectural inefficiency,,,suboptimal computational kernel size for the target,,,Inefficient SIMD width for AMD Ryzen,1,,,Used less wide 128bit SIMD instruction,Tuning kernel size,,https://github.com/gromacs/gromacs/commit/570db57b3ce38bd13c1ed3d13d1a34264f42e590
Inefficient coding for target micro-architecure,,,Micro-architectural inefficiency,,,suboptimal computational kernel size for the target,,,Improper value for one parameter,1,,,Increase value of P,Tuning kernel size,,https://github.com/xianyi/OpenBLAS/commit/7b2f5cb3b7378b3111010678bd1433ebdb13d9a6
Inefficient coding for target micro-architecure,,,Micro-architectural inefficiency,,,suboptimal computational kernel size for the target,,,Improper parameter values for Power10,1,,,Increasing the values of two parameter,Tuning kernel size,,https://github.com/xianyi/OpenBLAS/commit/41fe6e864ed70860cda1b1ccef09b55caf41fec9
Inefficient coding for target micro-architecure,,,Micro-architectural inefficiency,,,suboptimal computational kernel size for the target,,,Improper parameter values for Power10,1,,,Modification of some parameters,Tuning kernel size,,https://github.com/xianyi/OpenBLAS/commit/9579bd47e53fb65cca2f27e92340d1c08e745068
Inefficient coding for target micro-architecure,,,Micro-architectural inefficiency,,,suboptimal computational kernel size for the target,,,Improper parameter values for SKYLAKEX CPUs,1,,Unnecessary pressure on main memory,Increasing the value of one parameter,Tuning kernel size,,https://github.com/xianyi/OpenBLAS/commit/1c675670081422b8a3d7f0998dfd7d1454c0d2bd
Inefficient coding for target micro-architecure,,,Micro-architectural inefficiency,,,Use of slow instruction set,3,,,,,,Replace slow vpermpd instruction with vpermilpd for AMD CPU,Architecture specific fast instruction,,https://github.com/xianyi/OpenBLAS/commit/2dfb804cb943ac12035fe51859d109daca76b4f4
Inefficient coding for target micro-architecure,,,Micro-architectural inefficiency,,,Use of slow instruction set,,,,,,,Replace slow vpermpd instruction with vpermilpd for AMD CPU,Architecture specific fast instruction,,https://github.com/xianyi/OpenBLAS/commit/28e96458e5a4b2d8039ed16048a07892a7c960bf
Inefficient coding for target micro-architecure,,,Micro-architectural inefficiency,,,Use of slow instruction set,,,,,,,Used vector pair pointers to generate power10 lxvp instructions,Architecture specific fast instruction,,https://github.com/xianyi/OpenBLAS/commit/2379abaa5e6d559d58735f43e10d68c192724ea2
Inefficient coding for target micro-architecure,,,Micro-architectural inefficiency,,,suboptimal API for the target architecture,3,,Improper value for greedy parameter,1,,,Disable greedy indexing,Architecture specific logic modification,,https://github.com/arrayfire/arrayfire/commit/8b9756e8f31303110a195326319f4782bf9cdb54
Inefficient coding for target micro-architecure,,,Micro-architectural inefficiency,,,suboptimal API for the target architecture,,,,,,,Conditional code execution for AMD GPU,Architecture specific logic modification,,https://github.com/openmm/openmm/commit/138ae18003e2d688939680342d9126d116bb08ea
Inefficient coding for target micro-architecure,,,Micro-architectural inefficiency,,,suboptimal API for the target architecture,,,,,,,Removed unnecessary condtion checking,Architecture specific logic modification,,https://github.com/openmm/openmm/commit/4cf4328e1e3ae8f49adbb9aadad4ac86e3478825
Missing parallelism,12,"6,45%",Vector/SIMD parallelism,5,"2,69%",,,,,,,,,Introduce vectorization,,https://github.com/lattice/quda/commit/5f028db11bc5111032dc9ab107dc36b681728f60
Missing parallelism,,,Vector/SIMD parallelism,,,,,,,,,,,Introduce vectorization,,https://github.com/xianyi/OpenBLAS/commit/0ed1f07660b1836e530d5d9b0a140a36a8bca39d
Missing parallelism,,,Vector/SIMD parallelism,,,,,,,,,,,Introduce vectorization,,https://github.com/xianyi/OpenBLAS/commit/1b1a757f5f389b9496f016defaecccb63c415fa6
Missing parallelism,,,Vector/SIMD parallelism,,,,,,,,,,,Introduce vectorization,,https://github.com/xianyi/OpenBLAS/commit/8c0b206d4cf9909017a52919a41406ee303f472e
Missing parallelism,,,Vector/SIMD parallelism,,,,,,,,,,,Introduce vectorization,,https://github.com/lattice/quda/commit/5f028db11bc5111032dc9ab107dc36b681728f60
Missing parallelism,,,GPU parallelism,2,,,,,,,,,,OpenMP,,https://github.com/hypre-space/hypre/commit/a05d1942c9a1db25c6fa4c0c290fa312dc451a84
Missing parallelism,,,GPU parallelism,,,,,,,,,,,Loop unrolling,,https://github.com/lattice/quda/commit/9b1428de8d8bab09b1286662cda62fca0902ad43
Missing parallelism,,,Instruction level parallelism,1,,,,,,,,,,Loop unrolling,eliminate loop carried dependence,https://github.com/lattice/quda/commit/d549434c03da00f458692dc560a69a178875b22c
Missing parallelism,,,Task parallelism,4,,,,,,,,,,OpenMP,OpenMP parallel sections,https://github.com/GOMC-WSU/GOMC/commit/37a6bfd986b43e76f41865da4da2cbaadfd28fc6
Missing parallelism,,,Task parallelism,,,,,,,,,,,pthread-based paralleism,Loop-level parallelism,https://github.com/TileDB-Inc/TileDB/commit/96eb2d5c8dae52fe768ea8bd947676af3d536168
Missing parallelism,,,Task parallelism,,,,,,,,,,,pthread-based paralleism,,https://github.com/xianyi/OpenBLAS/commit/d6e7e05bb36d77f26274abf7d8be03dd2bd78c1d
Missing parallelism,,,Task parallelism,,,,,,,,,,introduce parallel for,oneAPI,Loop-level parallelism,https://github.com/CGAL/cgal/commit/c707ee0e13ccdd0a1948d770738ed232eba5a039
Parallelization overhead/inefficiency,15,"8,06%",small parallel region,5,,,,,,,,,The code only performs omp parallel atomic operation,reduce parallelization,,https://github.com/ginkgo-project/ginkgo/commit/490fd31b23e7940771a5ef27ff2e037ba9cd06d4
Parallelization overhead/inefficiency,,,small parallel region,,,,,,,,,,,Tune task size,move parallelization to outer loop,https://github.com/ginkgo-project/ginkgo/commit/b187da0d13a67e9b7153c3f56cfd30a6a87c27e2
Parallelization overhead/inefficiency,,,small parallel region,,,,,,,,,,,Tune task size,increase workload per thread,https://github.com/mfem/mfem/commit/2ae97ff2da232fba7bbd83a9076c9b2bfb1e652c
Parallelization overhead/inefficiency,,,small parallel region,,,,,,,,,,simd,Tune task size,,https://github.com/xianyi/OpenBLAS/commit/5c6f008365ee3c6d42f8630d27259f130a688468
Parallelization overhead/inefficiency,,,small parallel region,,,,,,,,,,,Tune task size,,https://github.com/gromacs/gromacs/commit/1789c5d65521752540a7017427e0544ab8749a04
Parallelization overhead/inefficiency,,,Inefficeint thread mapping / inefficient block size / Load imbalance,2,,,,,,,,,,Tune task size,set blocksize,https://github.com/lattice/quda/commit/4ef8d8a53e32a2480c5e502aeaa9af2ce04fc088
Parallelization overhead/inefficiency,,,Inefficeint thread mapping / inefficient block size / Load imbalance,,,,,,,,,,,Tune task size,set blocksize,https://github.com/lattice/quda/commit/85afe1933fa44d4cad0ce0d51cded0a802f2139a
Parallelization overhead/inefficiency,,,Inefficeint thread mapping / inefficient block size / Load imbalance,2,,,,,,,,,,Tune task size,set blocksize,https://github.com/kokkos/kokkos/commit/501f05661d1430a6e5ec19c0cbc7977a608d5dce
Parallelization overhead/inefficiency,,,Inefficeint thread mapping / inefficient block size / Load imbalance,,,,,,,,,,,Explicitly set thread numbers,,https://github.com/gromacs/gromacs/commit/cd01238b6b0eca4ddf115efc3abda44e98eabe6d
Parallelization overhead/inefficiency,,,Inefficeint thread mapping / inefficient block size / Load imbalance,2,,,,,,,,,,Sort workload and schedule,,https://github.com/gromacs/gromacs/commit/f026e69e84630ab6b63b6c0cfbef0503477a6951
Parallelization overhead/inefficiency,,,Inefficeint thread mapping / inefficient block size / Load imbalance,,,inefficient thread mapping,1,,,,,,,Tune task size,,https://github.com/lattice/quda/commit/4ef8d8a53e32a2480c5e502aeaa9af2ce04fc088
Parallelization overhead/inefficiency,,,Under-parallelization,2,,,,,,,,,,Explicitly set thread numbers,,https://github.com/gromacs/gromacs/commit/20dae8ae3667e788c3fccab70193c022345a7b33
Parallelization overhead/inefficiency,,,Under-parallelization,,,,,,,,,,,Tune task size,,https://github.com/arrayfire/arrayfire/commit/565caf5df8c6941410ad025bf88ad9c230b4b06c
Parallelization overhead/inefficiency,,,Over-Parallelization,2,,,,,,,,,,Explicitly set thread numbers,,https://github.com/xianyi/OpenBLAS/commit/0c1c903f1eb79719aa159b497cc2089d9fe61556
Parallelization overhead/inefficiency,,,Over-Parallelization,,,,,,,,,,,Explicitly set thread numbers,,https://github.com/ginkgo-project/ginkgo/commit/646c2cc6cf402514ff8eced008c3b60566f5277d
Inefficient Concurrency control and synchronization,7,"3,76%",Unncessary locks,3,,,,,,,,,,Eliminate unnecessary lock,by condition check,https://github.com/xianyi/OpenBLAS/commit/3119b2ab4c0d9cf7c681b8abbb6b4e4ec7e13b8a
Inefficient Concurrency control and synchronization,,,Unncessary locks,,,,,,,,,,,Eliminate unnecessary lock,by condition check,https://github.com/CGAL/cgal/commit/f8449dcec4a48873c814300b1012b3ba37de5ef7
Inefficient Concurrency control and synchronization,,,Unncessary locks,,,coarse-grain locks,,,,,,,,Eliminate unnecessary lock,by unlock early,https://github.com/TileDB-Inc/TileDB/commit/236dd7b5a57eaf4f6ea818161767764438eda54d
Inefficient Concurrency control and synchronization,,,Unncessary strong memory consistency,1,,,,,,,,,,Replace strong consistency with an weaker one,Eliminate strong memory fence in the presenece of cache consistency,https://github.com/xianyi/OpenBLAS/commit/d148ec4ea18e672dacb1270d4a5308ccaaae18bc
Inefficient Concurrency control and synchronization,,,Lock management overhead,1,,,,,,,,,,Efficient lock implementation with atomics,replaced locks with atomic intrinsics,https://github.com/xianyi/OpenBLAS/commit/208c7e7ca50a8bfdfabbec750bdc538023c94aed
Inefficient Concurrency control and synchronization,,,Unnecessary synchronization,2,,,,,,,,,,Eliminate unncessary synchronization,,https://github.com/openmm/openmm/commit/082019994d4c4a60629777164caa43edb43b60d8
Inefficient Concurrency control and synchronization,,,Unnecessary synchronization,,,,,,,,,,,Rewrite kernel to make memory access warp-synchronous,,https://github.com/gromacs/gromacs/commit/bb4128daf630719a670dc795b2cf2cc937c2c8f1
Unnecessary process communiction,2,,Unnecessary synchronization,,,,,,,,,,,Avoid unnecessary communication,,https://github.com/gromacs/gromacs/commit/0a5a594e3eb093bc0e4183066ac5ccee1ba32c57
Unnecessary process communiction,,,Unnecessary synchronization,,,,,,,,,,,Avoid unnecessary communication,,https://github.com/libMesh/libmesh/commit/24a22afdcac7061f41f7bf89c5a88cdf014fb4f1
Inefficient algorithm /data-structure and their implementation,73,"39,25%",Unnecessary operation/traversal/function call,13,"6,99%",Unnecessary computation,2,,,,,,,Reduce iteration/traversal of data structure,data structure design to avoid unnecessary particle collition detection,https://github.com/OpenFOAM/OpenFOAM-dev/commit/91e84b9004c4a9be2c135465617783f21d28dc71
Inefficient algorithm /data-structure and their implementation,,,Unnecessary operation/traversal/function call,,,Unnecessary computation,,,,,,,Reduce iteration/traversal of data structure,reduce iteration/traversal of data structure,,https://github.com/gromacs/gromacs/commit/7b4d632dd09d0714f65ec48d7380084d65907c4b
Inefficient algorithm /data-structure and their implementation,,,Unnecessary operation/traversal/function call,,,Unnecessary function call,1,,,,,,Eliminating unnecessary operation,,,https://github.com/lattice/quda/commit/cc5e859c7f776475e235fcb2fc7cc3ef7b6926e4
Inefficient algorithm /data-structure and their implementation,,,Unnecessary operation/traversal/function call,,,Inefficient sparse array computation,1,,,,,Stores compressed data for sparse array,data structure transformation,,,https://github.com/TileDB-Inc/TileDB/commit/f4c61783d886b337acf30772e5912cbbe286685f
Inefficient algorithm /data-structure and their implementation,,,Unnecessary operation/traversal/function call,,,Unnecessary traversal,8,"4,30%",,,,Search sorted data-structure and stop when found,Reduce iteration/traversal of data structure,bail out early,,https://github.com/openmm/openmm/commit/8bcff367565b896f7468161480f4d446254a8a13
Inefficient algorithm /data-structure and their implementation,,,Unnecessary operation/traversal/function call,,,Unnecessary traversal,,,,,,,Reduce iteration/traversal of data structure,,,https://github.com/CGAL/cgal/commit/c66604509d6f0aec527b35d119698cf798da838f
Inefficient algorithm /data-structure and their implementation,,,Unnecessary operation/traversal/function call,,,Unnecessary traversal,,,,,,,Reduce iteration/traversal of data structure,narrow search space,,https://github.com/mlpack/mlpack/commit/18f4b5ce035f0f4cd37bbe4436795d93b31fb872
Inefficient algorithm /data-structure and their implementation,,,Unnecessary operation/traversal/function call,,,Unnecessary traversal,,,,,,,Reduce iteration/traversal of data structure,bail out early,,https://github.com/xianyi/OpenBLAS/commit/2470129132df121aa922e4abe955c64a5d1385cb
Inefficient algorithm /data-structure and their implementation,,,Unnecessary operation/traversal/function call,,,Unnecessary traversal,,,,,,,Reduce iteration/traversal of data structure,bail out early,,https://github.com/CGAL/cgal/commit/73e9e867c20742e2b8dcc65a0606118094c00c46
Inefficient algorithm /data-structure and their implementation,,,Unnecessary operation/traversal/function call,,,Unnecessary traversal,,,,,,,Reduce iteration/traversal of data structure,bail out early,,https://github.com/lammps/lammps/commit/c3aa705d0409ddf9457cd1ba86e43ef10fc42d6e
Inefficient algorithm /data-structure and their implementation,,,Unnecessary operation/traversal/function call,,,Unnecessary traversal,,,,,,,lower complexity algorithm - domain specific,Tuning parameter - Domain specific,,https://github.com/mlpack/mlpack/commit/309b766e6642805fa805cedb4563477f8dcf5419
Inefficient algorithm /data-structure and their implementation,,,Unnecessary operation/traversal/function call,,,Unnecessary traversal,,,unnecessary sort,,,,Eliminating unnecessary operation,,,https://github.com/hypre-space/hypre/commit/827e7997de0179d9ed0787ff0c307e36ceb2ecbc
Inefficient algorithm /data-structure and their implementation,,,Unnecessary operation/traversal/function call,,,Unnecessary itermediate variable usage,1,,,,,,kernel fusion,,,https://github.com/lammps/lammps/commit/bcfc606efb2622e9afdfae6984f6b01a187f0997
Inefficient algorithm /data-structure and their implementation,,"8,60%",Redundant operation,16,8.60%,Redundant traversal,1,,,,,Caching the result of past traversal,caching,,,https://github.com/CGAL/cgal/commit/351249b03c662c4aa53b289f9ceb61c0a8067926
Inefficient algorithm /data-structure and their implementation,,,Redundant operation,,,Redundant allocation,2,,,,,,Loop invariant code motion,,,https://github.com/CGAL/cgal/commit/e9cc8bcd5e71ca0b9b7b5888b7d400f9e24417d4
Inefficient algorithm /data-structure and their implementation,,,Redundant operation,,,Redundant allocation,,,,,,,Loop invariant code motion,Allocate outside loop and reuse,,https://github.com/arrayfire/arrayfire/commit/ee30e2729744afb157276107e1f74b4085b38e72
Inefficient algorithm /data-structure and their implementation,,,Redundant operation,,,Redundant computation,,,multtranspose in loop,,,,Loop invariant code motion,,,https://github.com/mfem/mfem/commit/2c9ee23a19c62b98da270a05dc868c17f070a788
Inefficient algorithm /data-structure and their implementation,,,Redundant operation,,,Redundant computation,,,,,,,Loop invariant code motion,,,https://github.com/casadi/casadi/commit/43880425898271af55d22a651597f98d0a3562b6
Inefficient algorithm /data-structure and their implementation,,,Redundant operation,,,Redundant computation,,,Dead store,,,,Eliminating unnecessary operation,,,https://github.com/mlpack/mlpack/commit/18f4b5ce035f0f4cd37bbe4436795d93b31fb872
Inefficient algorithm /data-structure and their implementation,,,Redundant operation,,,Redundant computation,,,,,,avoid expensive function call if matrix size is small,Eliminating unnecessary operation,,,https://github.com/xianyi/OpenBLAS/commit/66316b9f4c8c7c48eed8b29e86f64581c02d45b0
Inefficient algorithm /data-structure and their implementation,,,Redundant operation,,,Redundant computation,12,"6,45%",Redundant sort operation,,,,Loop invariant code motion,,,https://github.com/libMesh/libmesh/commit/1ad14f2705496281cbc7afd603ed513cab557e15
Inefficient algorithm /data-structure and their implementation,,,Redundant operation,,,Redundant computation,,,Redundant sort operation,,,,caching,,,https://github.com/casadi/casadi/commit/181681828aea630a0b827c9bc2b35ffaf8110b1c
Inefficient algorithm /data-structure and their implementation,,,Redundant operation,,,Redundant computation,,,Redundant sort operation,,,Removed unnecessary vector copy inside loop,Eliminating unnecessary operation,,,https://github.com/mlpack/mlpack/commit/5e1d0dacd0121243ba1aa9258992931d0839666d
Inefficient algorithm /data-structure and their implementation,,,Redundant operation,,,Redundant computation,,,Redundant sort operation,,,,caching,,,https://github.com/gromacs/gromacs/commit/8a1938afdccd41b96eed056bd8b8ed49632008fb
Inefficient algorithm /data-structure and their implementation,,,Redundant operation,,,Redundant computation,,,Redundant sort operation,,,,scalar replacement,,,https://github.com/arrayfire/arrayfire/commit/dca852e2d53a2b606b7aa4cf5990ab99a9b3b67e
Inefficient algorithm /data-structure and their implementation,,,Redundant operation,,,Redundant computation,,,Redundant sort operation,,,Added condition filtering before computation,Eliminating unnecessary operation,,,https://github.com/kokkos/kokkos/commit/b7dc696a5fec15e29ccc35da352f7398ce864b29
Inefficient algorithm /data-structure and their implementation,,,Redundant operation,,,Redundant computation,,,Redundant variable assignment operation,,,Removed extra variable assignment,Avoid memory dereference by storing in register,,,https://github.com/hypre-space/hypre/commit/d1fff3e84d5f6a74e601bcc89c9dcc49c6235213
Inefficient algorithm /data-structure and their implementation,,,Redundant operation,,,Redundant computation,,,Redundant list splitting due to integer overflow,,,Avoid integer overflow,fix programming error,,,https://github.com/gromacs/gromacs/commit/f7c18fba349729f99e30f22567679c541a61c1df
Inefficient algorithm /data-structure and their implementation,,,Redundant operation,,,Unnecessary branching (??),1,,Removing branch in function (branch optimization),,,,code specialization,,,https://github.com/TileDB-Inc/TileDB/commit/0a4d55b5dd4347f2a4d4fbfab866e3dbdbdb00f2
Inefficient algorithm /data-structure and their implementation,,"15,59%",Expensive operation,29,15.59%,Expensive algorithm,3,,,,,,lower complexity algorithm - domain specific,,,https://github.com/gromacs/gromacs/commit/7a61f0409c88b284c557a0c693879327934b2e89
Inefficient algorithm /data-structure and their implementation,,,Expensive operation,,,Expensive algorithm,,,,,,use binary search,lower complexity algorithm - domain and arch agnostic,,,https://github.com/gromacs/gromacs/commit/a711d4142629a31d92f7bbce8b8a51888f52e88f
Inefficient algorithm /data-structure and their implementation,,,Expensive operation,,,Expensive algorithm,,,,,,,lower complexity algorithm - domain specific,,,https://github.com/llnl/elemental/commit/b76dea7a9609b838e0084549f330bff17c3f6500
Inefficient algorithm /data-structure and their implementation,,,Expensive operation,,,Expensive runtime evaluation,3,,,,,,caching,,,https://github.com/openmm/openmm/commit/84691dc465f58f60341b196657276ddc381e6f59
Inefficient algorithm /data-structure and their implementation,,,Expensive operation,,,Expensive runtime evaluation,,,,,,,Enable compile time evaluation,,,https://github.com/arrayfire/arrayfire/commit/f62199b77718b4f2e2748921b78055adb0405d9e
Inefficient algorithm /data-structure and their implementation,,,Expensive operation,,,Expensive runtime evaluation,,,,,,Evaluate log(x) using a lookup table for speed.,caching,,,https://github.com/openmm/openmm/commit/f39a55452514041325abb3f6fe2512e437fa877e
Inefficient algorithm /data-structure and their implementation,,,Expensive operation,,,Expensive many memory references,3,,Expensive data-structure traversal,,,,strength reduction,,,https://github.com/lattice/quda/commit/e04b189e232392b36d0140bdb53bd5d0af9d05b6
Inefficient algorithm /data-structure and their implementation,,,Expensive operation,,,Expensive many memory references,,,,,,,caching,,,https://github.com/gromacs/gromacs/commit/829af878484af51490a1da82b426019e3119a079
Inefficient algorithm /data-structure and their implementation,,,Expensive operation,,,Expensive many memory references,,,,,,fast approximation to avoid table lookup,Avoid memory dereference by storing in register,approximation,,https://github.com/openmm/openmm/commit/0e5d3fb1f02cad944327d4d921dd5c8fbf310ba2
Inefficient algorithm /data-structure and their implementation,,,Expensive operation,,,Expensive atomic call,1,,API miss use,,,,Faster API call,,,https://github.com/kokkos/kokkos/commit/0b636c910085f4b8414e06321c0cc276d29fa654
Inefficient algorithm /data-structure and their implementation,,,Expensive operation,,,Expensive computational kernel for a target architecture,3,,,,,,Architecture specific fast kernel,,,https://github.com/xianyi/OpenBLAS/commit/d321448a63954d536f90592cd0cc53c304b08d2e
Inefficient algorithm /data-structure and their implementation,,,Expensive operation,,,Expensive computational kernel for a target architecture,,,,,,,Architecture specific fast kernel,,,https://github.com/xianyi/OpenBLAS/commit/89fe17f20e7d1d10a7ec3315bf9b1816a3d47ce9
Inefficient algorithm /data-structure and their implementation,,,Expensive operation,,,Expensive computational kernel for a target architecture,,,,,,,Architecture specific fast kernel,,,https://github.com/xianyi/OpenBLAS/commit/c43331ad0aeaefe4b4d90aab06c93655c851feab
Inefficient algorithm /data-structure and their implementation,,,Expensive operation,,,expensive high precision calculation,3,,,,,replace with reduced precision math library,reduced precision,,,https://github.com/arrayfire/arrayfire/commit/d0d87ab2525af162de48764a0e4634110ab7d00f
Inefficient algorithm /data-structure and their implementation,,,Expensive operation,,,expensive high precision calculation,,,,,,,reduced precision,,,https://github.com/lattice/quda/commit/955ea6cae8e358b942183ca30d44d1f3ca3d7296
Inefficient algorithm /data-structure and their implementation,,,Expensive operation,,,expensive high precision calculation,,,,,,,reduced precision,,,https://github.com/gromacs/gromacs/commit/4cd608ba1c6b677472b3dfcb19cc5f15ebe9e639
Inefficient algorithm /data-structure and their implementation,,,Expensive operation,,,Expensive exponential operation(O(n) overhead),1,,,,,,strength reduction,,,https://github.com/lammps/lammps/commit/2c945f6753d274ab2411acdedbc616f9a9da3aa8
Inefficient algorithm /data-structure and their implementation,,,Expensive operation,,,Expensive tensor calculation,1,,,,,,strength reduction,,,https://github.com/OpenFOAM/OpenFOAM-dev/commit/56059e7fb9d36f728713c450fe3e565acec61f53
Inefficient algorithm /data-structure and their implementation,,,Expensive operation,,,Expensive type-casting,2,,,,,fast static_cast instread of dynamic_cast,Enable compile time evaluation,,,https://github.com/CGAL/cgal/commit/9adf4385ff879626652323eab82fb91cab59db5a
Inefficient algorithm /data-structure and their implementation,,,Expensive operation,,,Expensive type-casting,,,,,,fast static_cast instread of dynamic_cast,Enable compile time evaluation,,,https://github.com/CGAL/cgal/commit/9adf4385ff879626652323eab82fb91cab59db5a
Inefficient algorithm /data-structure and their implementation,,,Expensive operation,,,Expensive library function call,2,,,,,Replace SQRT and POW by more efficient computations,strength reduction,,,https://github.com/CGAL/cgal/commit/4ea573a48b5128f074a9dd4cfd3ecbe820698495
Inefficient algorithm /data-structure and their implementation,,,Expensive operation,,,Expensive library function call,,,,,,Replace inefficient copy with faster copy function,Faster API call,,,https://github.com/GlobalArrays/ga/commit/4f11d05a57dfcd525ec465d33fc01c7c9804d207
Inefficient algorithm /data-structure and their implementation,,,Expensive operation,,,Expensive integer division,1,,,,,Replaced costly integer division with addition,strength reduction,,,https://github.com/casadi/casadi/commit/29b68823a4c988d73457c31791d9cf457d1ce78d
Inefficient algorithm /data-structure and their implementation,,,Expensive operation,,,Expensive function call,5,,,,,Remove unnecessary condtionion checking,Eliminating unnecessary operation,,,https://github.com/gromacs/gromacs/commit/2f23bc394ba7d47d851260fc9caa01fcd022c05f
Inefficient algorithm /data-structure and their implementation,,,Expensive operation,,,Expensive function call,,,,,,,Eliminating unnecessary operation,,,https://github.com/CGAL/cgal/commit/54d8839ac9f5cc60c630fe13db8daab236cbfb3f
Inefficient algorithm /data-structure and their implementation,,,Expensive operation,,,Expensive function call,,,,,,,code specialization,,,https://github.com/GlobalArrays/ga/commit/e9c1456af12cd64a91c19dd57c52f96bf5573ad6
Inefficient algorithm /data-structure and their implementation,,,Expensive operation,,,Expensive function call,,,,,,Replace expensive function calls with faster API,Loop invariant code motion,,,https://github.com/mlpack/mlpack/commit/83207c4439ce3072e9b590cd6d2feeafdd25f2bd
Inefficient algorithm /data-structure and their implementation,,,Expensive operation,,,Expensive function call,,,,,,,strength reduction,,,https://github.com/CGAL/cgal/commit/871a04e88cd4c1ab2c12cf0a5e52d028ffde6098
Inefficient algorithm /data-structure and their implementation,,,Expensive operation,,,Expensive kernel operation for small matrix,1,,,,,Batching operation for small matrix,Batching function calls,,,https://github.com/xianyi/OpenBLAS/commit/aa7b3dc3dbdad15de5a239cb4fc4364815dfbc4d
Inefficient algorithm /data-structure and their implementation,,,Frequent  function call,3,,,,,,,,,lazy housekeeping,,,https://github.com/casadi/casadi/commit/4932022950b1057ee45a35a2a8fff636fa0cf7f6
Inefficient algorithm /data-structure and their implementation,,,Frequent  function call,,,,,,,,,,Batching function calls,,,https://github.com/GOMC-WSU/GOMC/commit/b5d7ebd72508105b9475acc0939f4df00bb92041
Inefficient algorithm /data-structure and their implementation,,,Frequent  function call,,,,,,,,,,Batching function calls,,,https://github.com/GOMC-WSU/GOMC/commit/ca196579f49e6d88c990cb8b27b89a961f1f86c4
Inefficient algorithm /data-structure and their implementation,,"4,84%",Inefficient data-structure library,9,,Slower data structure,2,,,,,Replaced array with atomic<char>,data structure transformation,,,https://github.com/CGAL/cgal/commit/743335d56eab5fc1f823d21921fefe6ea7d28ab3
Inefficient algorithm /data-structure and their implementation,,,Inefficient data-structure library,,,Slower data structure,,,,,,Use heap for fast searching,data structure transformation,,,https://github.com/mlpack/mlpack/commit/198cec80a434b3d88a993e3d67a18b778ebc07f1
Inefficient algorithm /data-structure and their implementation,,,Inefficient data-structure library,,,Inefficient library API call,7,,dynamic contiguous array allocation when size known statically,,,,Use of fast data strcture container,,,https://github.com/arrayfire/arrayfire/commit/ee30e2729744afb157276107e1f74b4085b38e72
Inefficient algorithm /data-structure and their implementation,,,Inefficient data-structure library,,4.83%,Inefficient library API call,,,,,,,Use of fast data strcture container,,,https://github.com/OpenFOAM/OpenFOAM-dev/commit/51247eec60699983f41f3b1298080a08612ef8bb
Inefficient algorithm /data-structure and their implementation,,,Inefficient data-structure library,,,Inefficient library API call,,,,,,,Use of fast data strcture container,,,https://github.com/precice/precice/commit/d08d467776f5242a6ec5d59cbdb697a3b1351f4f
Inefficient algorithm /data-structure and their implementation,,,Inefficient data-structure library,,,Inefficient library API call,,,,,,Replace slow STL API with faster operator [] for vector insert operation,Use of fast data strcture container,,,https://github.com/CGAL/cgal/commit/e9cc8bcd5e71ca0b9b7b5888b7d400f9e24417d4
Inefficient algorithm /data-structure and their implementation,,,Inefficient data-structure library,,,Inefficient library API call,,,,,,Replaced forward_list with std::vector,Use of fast data strcture container,,OS specific,https://github.com/TileDB-Inc/TileDB/commit/d51b082681569c75b2ccc2d3d2aea69548536f6c
Inefficient algorithm /data-structure and their implementation,,,Inefficient data-structure library,,,Inefficient library API call,,,,,,Efficient API usage for data structure access,Use of fast data strcture container,,,https://github.com/gromacs/gromacs/commit/9acdb3a9cd519c446343a239ffef934e6e45c7ee
Inefficient algorithm /data-structure and their implementation,,,Inefficient data-structure library,,,Inefficient library API call,,,Inefficient due to reference counting overhead,,,Used data structure with no reference counting technique,Use of fast data strcture container,,,https://github.com/CGAL/cgal/commit/8855eb54c305ffeaec32cb6bc49bfb0a2e465cc2
Inefficient algorithm /data-structure and their implementation,,,Usage of improper data type,3,,Slowdown due to wrong data type,3,,,,,Changed data type to avoid overflow of computation,Use of data types that reduces computation and memory overhead,,,https://github.com/xianyi/OpenBLAS/commit/0caf1434c928d39373499ffc02abe645945485d8
Inefficient algorithm /data-structure and their implementation,,,Usage of improper data type,,,Slowdown due to wrong data type,,,CUDA kernel performance degradation due to data type,,,Replaced long long to int in cuda kernel,Use of data types that reduces computation and memory overhead,,GPU kernel,https://github.com/arrayfire/arrayfire/commit/6b19b7a45826673cb2474db266d2d024d56abdc1
Inefficient algorithm /data-structure and their implementation,,,Usage of improper data type,,,Slowdown due to wrong data type,,,,,,,Use of data types that reduces computation and memory overhead,,,https://github.com/openmm/openmm/commit/5b017677e1add9ac33b318c73fad21c04ff93287
Inefficient memory management,13,"6,99%",memory leak,5,,,,,,,,,,Avoid memory leak by memory management,,https://github.com/arrayfire/arrayfire/commit/44845c014140dcf195262db9c6474eb592436411
Inefficient memory management,,,memory leak,,,,,,,,,,Avoid memory leak by memory management,,,https://github.com/arrayfire/arrayfire/commit/51be7e2e5e639d9099dfc22c2703fb557e407f15
Inefficient memory management,,,memory leak,,,,,,,,,,Avoid memory leak by memory management,,,https://github.com/arrayfire/arrayfire/commit/498598d05c6d434c8f785ff1d1a3227369149f31
Inefficient memory management,,,memory leak,,,,,,,,,,Avoid memory leak by memory management,,,https://github.com/arrayfire/arrayfire/commit/d3bb2023bae565d8f76fa21a515c755f020c559b
Inefficient memory management,,,memory leak,,,,,,,,,,Avoid memory leak by memory management,,,https://github.com/arrayfire/arrayfire/commit/2e438e66f4e2922ed64089711fdab0594ee3a530
Inefficient memory management,4,,repreated memory allocation,,,,,,,,,Allocate large memory,Pre-allocation,,,https://github.com/hypre-space/hypre/commit/7074cb440016f011a86fdf6b329d2b7ceb75a2ee
Inefficient memory management,,,repreated memory allocation,,,,,,,,,,Pre-allocation,,,https://github.com/xianyi/OpenBLAS/commit/d744c9590ae18706b40e151a9adf2070639909fb
Inefficient memory management,,,repreated memory allocation,,,,,,,,,,Pre-allocation,,,https://github.com/lattice/quda/commit/e3f4a9bbf1f0a38ceb6984d2eba3ef0dde5e3e10
Inefficient memory management,,,repreated memory allocation,,,,,,,,,,Pre-allocation,,,https://github.com/llnl/elemental/commit/0e4e381bfacdbe41a74f03ecf9bd743e7c6de4a9
Inefficient memory management,,,Redundant memory allocation,,,,,,,,,Use std::make_shared instead of new.,Use efficient API,,,https://github.com/precice/precice/commit/042f4ed1ca72beda24baf79e54ab834057c364d4
Inefficient memory management,1,,Slower memory allocation library call,1,,,,,,,,Replaced with faster memory allocation library,Use efficient API,,,https://github.com/CGAL/cgal/commit/2e98995b29e8c010ad94831394f093b506b4cb69
Inefficient memory management,1,,Insufficient memory,1,,Inefficiency while computing large multiplication due to lower memory size,,,,,,Memory increase to handle large matrix,Increase memory size for efficiency,,,https://github.com/GlobalArrays/ga/commit/6b869d9ece536a375b5a79267bf3ca397de1b75d
Inefficient memory management,1,,unnecessary data copy,1,,,,,,,,,Reference rather than copy,,,https://github.com/mlpack/mlpack/commit/fe1b6b96fdfa12709df03b730614a00ea97a3747
I/O inefficiency,2,,sequential I/O operation,1,,,,,,,,,parallelize I/O operation,pthread-based paralleism,,https://github.com/TileDB-Inc/TileDB/commit/ac2474656d31588d52ecec16a0c06bf77ef3e11e
I/O inefficiency,1,,over parallelization,,,,,,,,,reduce the parallel I/O operation if performed on single file,reduce parallelization,,,https://github.com/GlobalArrays/ga/commit/4903a90ba750a2119d82b3e435c2e259fab097b9
Unintentional Programming logic error,3,,boundary condition check,2,,,,,,,,,,fix programming error,,https://github.com/xianyi/OpenBLAS/commit/274d6e015b56a9f0ccad928232ed3bd88a063754
Unintentional Programming logic error,,,boundary condition check,,,,,,,,removed mis-branching overhead,,fix programming error,,,https://github.com/libMesh/libmesh/commit/35e671c64a75b420d6534e2bdf6d34656418171b
Unintentional Programming logic error,,,boundary condition check,,,,,,,,,,fix programming error,,,https://github.com/mlpack/mlpack/commit/205b052082e1928447f9daa652d780b1aaeca0d7
Inefficiency due to new compiler version,1,,boundary condition check,,,,,,,,,,,Reduce parallelization,,https://github.com/lattice/quda/commit/2ae74fd9959ebcaebb961af1717ac22093f05161
Inefficiency due to new compiler version,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,
